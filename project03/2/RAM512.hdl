// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/2/RAM512.hdl

/**
 * Memory of 512 registers, each 16-bit wide.  
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = RAM512[address(t)](t)
 *     Write: If load(t-1) then RAM512[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load=1, the in value is loaded 
 * into the memory location specified by address.  This value becomes 
 * available through the out output starting from the next time step.
 */

CHIP RAM512 {

    IN  in[16], load, address[9];
    OUT out[16];

    PARTS:
	
    DMux8Way(in = load, a = loada, b = loadb, c = loadc, d = loadd, e = loade, f = loadf, g = loadg, h = loadh, sel = address[0..2]);
    RAM64(in = in, out = out1, load = loada, address = address[3..8]);
	RAM64(in = in, out = out2, load = loadb, address = address[3..8]);
	RAM64(in = in, out = out3, load = loadc, address = address[3..8]);
	RAM64(in = in, out = out4, load = loadd, address = address[3..8]);
	RAM64(in = in, out = out5, load = loade, address = address[3..8]);
	RAM64(in = in, out = out6, load = loadf, address = address[3..8]);
	RAM64(in = in, out = out7, load = loadg, address = address[3..8]);
	RAM64(in = in, out = out8, load = loadh, address = address[3..8]);
	Mux8Way16(sel = address[0..2], out = out, a = out1, b = out2, c = out3, d = out4, e = out5, f = out6, g = out7, h = out8);
}
