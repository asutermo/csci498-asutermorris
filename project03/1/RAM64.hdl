// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/1/RAM64.hdl

/**
 * Memory of 64 registers, each 16-bit wide.  
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = RAM64[address(t)](t)
 *     Write: If load(t-1) then RAM64[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load=1, the in value is loaded 
 * into the memory location specified by address.  This value becomes 
 * available through the out output starting from the next time step.
 */

CHIP RAM64 {

    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel = address[3..5], a = load1, b = load2, c = load3, d = load4, e = load5, f = load6, g = load7, h = load8);
	RAM8(in = in, load = load1, address = address[0..2], out = out1);
	RAM8(in = in, load = load2, address = address[0..2], out = out2);
	RAM8(in = in, load = load3, address = address[0..2], out = out3);
	RAM8(in = in, load = load4, address = address[0..2], out = out4);
	RAM8(in = in, load = load5, address = address[0..2], out = out5);
	RAM8(in = in, load = load6, address = address[0..2], out = out6);
	RAM8(in = in, load = load7, address = address[0..2], out = out7);
	RAM8(in = in, load = load8, address = address[0..2], out = out8);
	Mux8Way16(a = out1, b = out2, c = out3, d = out4, e = out5, f = out6, g = out7, h = out8, sel = address[3..5], out = out);
}
